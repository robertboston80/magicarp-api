[MASTER]
persistent=yes
ignore=fixtures,local_settings.py
cache-size=500

[MESSAGES CONTROL]
# Why those disables:
# missing-docstring - I assume it's up to developer if he wants to put
#   docstring or not, and pylint complains about missing docstring inside of
#   inner, being decorated function
# no-self-use - sometimes it's much more convenient to write method that could
#   be a function, pylint complains about it, however solution would be change
#   function in staticmethod or function and add extra import, there is no point
# no-init - some classes do not require init and making init that will only
#   call super is not the most efficient way of spending your time
# no-member - this feature is not working very well, very often class is being
#   reported as using non-member methods, but it doesn't recognise simple
#   inheritance
# unused-argument - while useful, there is many methods that have to implement
#   certain signature of arguments while not necessarily are going to use
#   any/all of them
# relative-import - relative imports are used to load submodule/subpackage into
# __init__.py to ease imports elsewhere, thus we want them in some cases
# redefined-variable-type - when we do tmp = dict() and 2 couple lines below
#   tmp = list() pylint complains, God knows why
# too-many-ancestors - it goes one of two ways, a) there is too many mixins on
#   class or class has at best 2 parents, that is why I have disabled it
# star-args - pylint complains when we pass dict as named args to a function
disable=missing-docstring,no-self-use,no-init,unused-argument,no-member,relative-import,redefined-variable-type,too-many-ancestors,star-args


[REPORTS]
output-format=parseable
files-output=n
reports=no

[BASIC]
no-docstring-rgx=__.*__|_.*|Test.*|test.*|.*Test|.*Tests|tests
class-rgx=[A-Z_][a-zA-Z0-9_]+$
function-rgx=[a-zA_][a-zA-Z0-9_]{2,70}$
method-rgx=[a-z_][a-zA-Z0-9_]{2,70}$
const-rgx=(([A-Z_][A-Z0-9_]*)|([a-z_][a-z0-9_]*)|(__.*__)|register|urlpatterns)$
good-names=_,__,f,i,j,n,fd,k,e,pk,id,q,ns,setUp,tearDown,pp,fn

[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=WSGIRequest

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=objects,DoesNotExist,id,pk,_meta,base_fields,context,__subclasses__,modifiers,Modifiers,refs

# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp


[VARIABLES]
init-import=no
dummy-variables-rgx=_|dummy

[SIMILARITIES]
min-similarity-lines=6
ignore-comments=yes
ignore-docstrings=yes

[MISCELLANEOUS]
notes=FIXME,XXX,TODO

[FORMAT]
max-line-length=79
max-module-lines=500
indent-string='    '

[DESIGN]
max-args=10
max-locals=25
max-returns=6
max-branchs=12
max-statements=50
max-parents=7
max-attributes=7
min-public-methods=0
max-public-methods=50
